name: DAST - ZAP Baseline

on:
  workflow_dispatch:
    inputs:
      target:
        description: "URL a escanear (ex.: https://staging.seuapp.com)"
        required: false
        default: "https://example.com"
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  zap:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Usa, nesta ordem: secret -> variables -> input do workflow -> fallback
      - name: Resolve TARGET
        run: |
          if [ -n "${{ secrets.STAGING_URL }}" ]; then
            T="${{ secrets.STAGING_URL }}"
            SRC="secret"
          elif [ -n "${{ vars.STAGING_URL }}" ]; then
            T="${{ vars.STAGING_URL }}"
            SRC="repo variable"
          elif [ -n "${{ github.event.inputs.target }}" ]; then
            T="${{ github.event.inputs.target }}"
            SRC="manual input"
          else
            T="https://example.com"
            SRC="fallback"
          fi
          echo "TARGET=$T" >> $GITHUB_ENV
          echo "Scanning target ($SRC): $T"

      - name: ZAP Baseline (fail on HIGH) + HTML/JSON
        run: |
          mkdir -p zap-out
          docker pull ghcr.io/zaproxy/zaproxy:stable
          docker run --rm -v "$PWD":/zap/wrk ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py \
              -t "${TARGET}" \
              -r zap-report.html \
              -J zap-report.json \
              -m 2
          mv -f zap-report.* zap-out/

      - name: Upload ZAP reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-out
